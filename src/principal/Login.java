/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import Controlador.Conexion;
import Mensajes.ErrorAlert;
import Mensajes.ErrorAlert1;
import com.sun.glass.events.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import mdlaf.MaterialLookAndFeel;

/**
 *
 * @author COMPAQ
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();

        transparentbutton();
        this.setLocationRelativeTo(null);

        try {

            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs = con.consultar("select * from usuario");

            tipousuario.addItem("Seleccione");
            while (rs.next()) {
                tipousuario.addItem(rs.getString(3));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tipousuario = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        usuario = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        contrasena = new javax.swing.JPasswordField();
        Entrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/290x350.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 340));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/giphy.gif"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 320, 380));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lock (1).png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 70, 70));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Tipo de Usuario");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        tipousuario.setBackground(new java.awt.Color(102, 51, 0));
        tipousuario.setFont(new java.awt.Font("Century Gothic", 0, 15)); // NOI18N
        tipousuario.setForeground(new java.awt.Color(102, 51, 0));
        tipousuario.setMinimumSize(new java.awt.Dimension(6, 20));
        tipousuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipousuarioActionPerformed(evt);
            }
        });
        jPanel1.add(tipousuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 170, 30));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 170, 10));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Usuario ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuarioActionPerformed(evt);
            }
        });
        jPanel1.add(usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 170, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 170, 10));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Contraseña ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, -1, -1));

        contrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrasenaActionPerformed(evt);
            }
        });
        contrasena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contrasenaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contrasenaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contrasenaKeyTyped(evt);
            }
        });
        jPanel1.add(contrasena, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 170, 30));

        Entrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Enter_OFF.png"))); // NOI18N
        Entrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Entrar.setBorderPainted(false);
        Entrar.setOpaque(false);
        Entrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Enter_ON.png"))); // NOI18N
        Entrar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Enter_OFF.png"))); // NOI18N
        Entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntrarActionPerformed(evt);
            }
        });
        jPanel1.add(Entrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 130, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 340, 440));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chanchuyo.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 320, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/chanchuyo.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntrarActionPerformed
        // TODO add your handling code here:

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            if (tipousuario.getSelectedIndex() == 0) {

                ErrorAlert1 obj = new ErrorAlert1(this, true);
                obj.t1.setText("¡¡POR FAVOR, SELECCIONE");
                obj.t1.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                obj.t1.setForeground(new java.awt.Color(153, 153, 153));
                obj.t2.setText("EL TIPO DE USUARIO!!");
                obj.t2.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                obj.t2.setForeground(new java.awt.Color(153, 153, 153));
                obj.setVisible(true);
            } else if (tipousuario.getSelectedIndex() != 0) {

                switch (tipousuario.getSelectedItem().toString()) {

                    case "Administrador":

                        ResultSet rs = con.consultar("select * from usuario where id_usuario = 1");

                        while (rs.next()) {

                            if (usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {

                                tipousuario.removeAllItems();
                                usuario.setText(null);
                                contrasena.setText(null);
//                                tipousuario.setEnabled(false);
//                                usuario.setEnabled(false);
//                                contrasena.setEnabled(false);
//                                Entrar.setEnabled(false);
//                                jlbAsignarArea.setEnabled(true);
//                                jlbAsignarDoctor.setEnabled(true);
//                                jlbAsignarPaciente.setEnabled(true);
//                                listadoareas.setEnabled(true);
//                                listadodoctores.setEnabled(true);               
                                Principal123 obj = new Principal123();
                                obj.setVisible(true);
                                this.dispose();

                            } else if (!usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            } else if (usuario.getText().trim().equals(rs.getString(2)) && !contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            }

                        }

                        break;
                    case "Empleado":

                        ResultSet rs2 = con.consultar("select * from usuario where id_usuario = 2");

                        while (rs2.next()) {

                            if (usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {

                                tipousuario.removeAllItems();
                                usuario.setText(null);
                                contrasena.setText(null);
//                                tipousuario.setEnabled(false);
//                                usuario.setEnabled(false);
//                                contrasena.setEnabled(false);
//                                Entrar.setEnabled(false);

//                                jlbAsignarArea.setEnabled(false);
//                                jlbAsignarDoctor.setEnabled(false);
//
//                                listadoareas.setEnabled(false);
//                                listadodoctores.setEnabled(false);
                                Principal123 obj = new Principal123();
                                obj.setVisible(true);
                                this.dispose();

                            } else if (!usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            } else if (usuario.getText().trim().equals(rs2.getString(2)) && !contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                ErrorAlert obj = new ErrorAlert(this, true);
                                obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                obj.setVisible(true);
                            }
                        }
                        break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EntrarActionPerformed

    private void contrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasenaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contrasenaActionPerformed

    private void tipousuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipousuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipousuarioActionPerformed

    private void usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuarioActionPerformed

    private void contrasenaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contrasenaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                Conexion con = new Conexion();
                con.ConexionPostgres();

                if (tipousuario.getSelectedIndex() == 0) {

                    ErrorAlert1 obj = new ErrorAlert1(this, true);
                    obj.t1.setText("¡¡POR FAVOR, SELECCIONE");
                    obj.t1.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t1.setForeground(new java.awt.Color(153, 153, 153));
                    obj.t2.setText("EL TIPO DE USUARIO!!");
                    obj.t2.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t2.setForeground(new java.awt.Color(153, 153, 153));
                    obj.setVisible(true);

                } else if (tipousuario.getSelectedIndex() != 0) {

                    switch (tipousuario.getSelectedItem().toString()) {

                        case "Administrador":

                            ResultSet rs = con.consultar("select * from usuario where idusuario = 1");

                            while (rs.next()) {

                                if (usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs.getString(2)) && !contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }
                            }

                            break;
                        case "Invitado":

                            ResultSet rs2 = con.consultar("select * from usuario where idusuario = 2");

                            while (rs2.next()) {

                                if (usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {

                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    jlbAsignarArea.setEnabled(false);
//                                    jlbAsignarDoctor.setEnabled(false);
//
//                                    listadoareas.setEnabled(false);
//                                    listadoct.setEnabled(false);
//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs2.getString(2)) && !contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }
                            }
                            break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_contrasenaKeyPressed

    private void contrasenaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contrasenaKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                Conexion con = new Conexion();
                con.ConexionPostgres();

                if (tipousuario.getSelectedIndex() == 0) {

                    ErrorAlert1 obj = new ErrorAlert1(this, true);
                    obj.t1.setText("¡¡POR FAVOR, SELECCIONE");
                    obj.t1.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t1.setForeground(new java.awt.Color(153, 153, 153));
                    obj.t2.setText("EL TIPO DE USUARIO!!");
                    obj.t2.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t2.setForeground(new java.awt.Color(153, 153, 153));
                    obj.setVisible(true);

                } else if (tipousuario.getSelectedIndex() != 0) {

                    switch (tipousuario.getSelectedItem().toString()) {

                        case "Administrador":

                            ResultSet rs = con.consultar("select * from usuario where idusuario = 1");

                            while (rs.next()) {

                                if (usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs.getString(2)) && !contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }

                            }

                            break;
                        case "Invitado":

                            ResultSet rs2 = con.consultar("select * from usuario where idusuario = 2");

                            while (rs2.next()) {

                                if (usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {

                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    jlbAsignarArea.setEnabled(false);
//                                    jlbAsignarDoctor.setEnabled(false);
//
//                                    listadoareas.setEnabled(false);
//                                    listadoct.setEnabled(false);
//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs2.getString(2)) && !contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }

                            }

                            break;
                    }
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_contrasenaKeyReleased

    private void contrasenaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contrasenaKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                Conexion con = new Conexion();
                con.ConexionPostgres();

                if (tipousuario.getSelectedIndex() == 0) {

                    ErrorAlert1 obj = new ErrorAlert1(this, true);
                    obj.t1.setText("¡¡POR FAVOR, SELECCIONE");
                    obj.t1.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t1.setForeground(new java.awt.Color(153, 153, 153));
                    obj.t2.setText("EL TIPO DE USUARIO!!");
                    obj.t2.setFont(new java.awt.Font("Century Gothic", 1, 21)); // NOI18N
                    obj.t2.setForeground(new java.awt.Color(153, 153, 153));
                    obj.setVisible(true);

                } else if (tipousuario.getSelectedIndex() != 0) {

                    switch (tipousuario.getSelectedItem().toString()) {

                        case "Administrador":

                            ResultSet rs = con.consultar("select * from usuario where idusuario = 1");

                            while (rs.next()) {

                                if (usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs.getString(2)) && contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs.getString(2)) && !contrasena.getText().trim().equals(rs.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }

                            }

                            break;
                        case "Invitado":

                            ResultSet rs2 = con.consultar("select * from usuario where idusuario = 2");

                            while (rs2.next()) {

                                if (usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {

                                    tipousuario.removeAllItems();
                                    usuario.setText(null);
                                    contrasena.setText(null);
                                    tipousuario.setEnabled(false);
                                    usuario.setEnabled(false);
                                    contrasena.setEnabled(false);

//                                    jlbAsignarArea.setEnabled(false);
//                                    jlbAsignarDoctor.setEnabled(false);
//
//                                    listadoareas.setEnabled(false);
//                                    listadoct.setEnabled(false);
//                                    contenedormenuprincipal.setVisible(true);
                                } else if (!usuario.getText().trim().equals(rs2.getString(2)) && contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Usuario incorrecto");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO INCORRECTO!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else if (usuario.getText().trim().equals(rs2.getString(2)) && !contrasena.getText().trim().equals(rs2.getString(4))) {
//            JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡CONTRASEÑA INCORRECTA!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                } else {
//            JOptionPane.showMessageDialog(null, "El usuario y la contraseña no son correctos"
//                    + "Rectifique!");
                                    ErrorAlert obj = new ErrorAlert(this, true);
                                    obj.titulo1.setText("¡USUARIO Y CONTRASEÑA INCORRECTOS!");
                                    obj.titulo1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                                    obj.titulo1.setForeground(new java.awt.Color(153, 153, 153));
                                    obj.setVisible(true);
                                }

                            }

                            break;
                    }
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_contrasenaKeyTyped
    public void transparentbutton() {
        Entrar.setOpaque(false);
        Entrar.setBorderPainted(false);
        Entrar.setContentAreaFilled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Entrar;
    private javax.swing.JPasswordField contrasena;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox tipousuario;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables
}
