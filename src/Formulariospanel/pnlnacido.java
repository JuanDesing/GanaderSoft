/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulariospanel;

import Controlador.Conexion;
import static Formulariospanel.pnlvaca.raza_id_raza;
import Mensajes.ErrorAlert;
import Mensajes.ErrorAlertarea;
import Mensajes.ErrorAlertnacido;
import Mensajes.ErrorAlertraza;
import Mensajes.SuccessAlert;
import Mensajes.WarningAlertCerrar;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;

/**
 *
 * @author RojeruSan
 */
public class pnlnacido extends javax.swing.JPanel {

    public pnlnacido() {
        initComponents();

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();
            ResultSet rs = con.consultar("select * from toro");

            toro_idtoro.addItem("Seleccione");
            while (rs.next()) {
                toro_idtoro.addItem(rs.getString(5));
            }
            ResultSet rs1 = con.consultar("select * from vaca");

            vaca_idvaca.addItem("Seleccione");
            while (rs1.next()) {
                vaca_idvaca.addItem(rs.getString(5));
            }

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(pnlnacido.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

        //OBTENIENDO EL ID DEL POTRERO Y DE LA RAZA
    //OBTENIENDO EL ID DEL POTRERO Y DE LA RAZA
    public static String obteneriddelpotrero(JComboBox nombredelcombopotrero
    ) {
        String iddelpotrero = "";

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs3 = con.consultar("select idpotrero from potrero where nombre_potrero = '" + potrero_idpotrero.getSelectedItem().toString() + "' ");

            if (rs3.next()) {
                iddelpotrero = rs3.getString(1);

            }

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(pnltoro.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return iddelpotrero;
    }

    public static String obteneriddelaraza(JComboBox nombredelcomboraza) {
        String iddelaraza = "";

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs4 = con.consultar("select id_raza from raza where nombre_raza = '" + raza_id_raza.getSelectedItem().toString() + "' ");

            if (rs4.next()) {
                iddelaraza = rs4.getString(1);

            }

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(pnltoro.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return iddelaraza;
    }

    //OBTENIENDO NOMBRE DE LA RAZA Y EL POTRERO
    public static String obtenernombredelpotrero(String iddelpotrero) {
        String nombredelpotrero = "";

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs33 = con.consultar("select idpotrero from potrero where nombre_potrero = " + potrero_idpotrero.getSelectedItem().toString() + " ");

            if (rs33.next()) {
                nombredelpotrero = rs33.getString(1);

            }

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(pnltoro.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return nombredelpotrero;
    }

    public static String obtenernombredelaraza(String iddelaraza) {
        String nombredelaraza = "";

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs4 = con.consultar("select id_raza from raza where nombre_raza = '" + raza_id_raza.getSelectedItem().toString() + "' ");

            if (rs4.next()) {
                nombredelaraza = rs4.getString(1);

            }

        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(pnltoro.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        return nombredelaraza;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id_cria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nombre_animal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        no_siniga_animal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        no_registro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        toro_idtoro = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        vaca_idvaca = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        raza_id_raza = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        potrero_idpotrero = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        ingreso_granja = new rojeru_san.componentes.RSDateChooser();
        jLabel11 = new javax.swing.JLabel();
        ingreso_sist = new rojeru_san.componentes.RSDateChooser();
        jLabel14 = new javax.swing.JLabel();
        motivo_ingreso = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        tipo_concepcion = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        color_animal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        fechanac_animal = new rojeru_san.componentes.RSDateChooser();
        jLabel18 = new javax.swing.JLabel();
        tatuaje_der = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        tatuaje_izq = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        sexo_animal = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        agregar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(667, 519));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(114, 76, 33));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Id Cr√≠a:");

        id_cria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        id_cria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_criaActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(114, 76, 33));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre: ");

        nombre_animal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombre_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombre_animalActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(114, 76, 33));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("No. Sinigan: ");

        no_siniga_animal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        no_siniga_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_siniga_animalActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(114, 76, 33));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("No. Registro: ");

        no_registro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        no_registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no_registroActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(114, 76, 33));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Padre:");

        jLabel7.setBackground(new java.awt.Color(114, 76, 33));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Madre:");

        jLabel8.setBackground(new java.awt.Color(114, 76, 33));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Raza:");

        jLabel9.setBackground(new java.awt.Color(114, 76, 33));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Potrero:");

        jLabel10.setBackground(new java.awt.Color(114, 76, 33));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Ingreso a la granja:");

        ingreso_granja.setColorBackground(new java.awt.Color(114, 76, 33));
        ingreso_granja.setColorButtonHover(new java.awt.Color(114, 76, 33));
        ingreso_granja.setColorDiaActual(new java.awt.Color(114, 76, 33));
        ingreso_granja.setColorForeground(new java.awt.Color(114, 76, 33));

        jLabel11.setBackground(new java.awt.Color(114, 76, 33));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Ingreso al sistema:");

        ingreso_sist.setColorBackground(new java.awt.Color(114, 76, 33));
        ingreso_sist.setColorButtonHover(new java.awt.Color(114, 76, 33));
        ingreso_sist.setColorDiaActual(new java.awt.Color(114, 76, 33));
        ingreso_sist.setColorForeground(new java.awt.Color(114, 76, 33));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Motivo de ingreso:");

        motivo_ingreso.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        motivo_ingreso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Compra", "Nacimiento", " " }));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Tipo de concepci√≥n:");

        tipo_concepcion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tipo_concepcion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Empadre M√∫ltiple", "Inseminaci√≥n Artificial", "Monta Natural", "Trasplante de Embriones" }));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Tatuaje del Toro:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Color del Toro:");

        color_animal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        color_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                color_animalActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(114, 76, 33));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Fecha de nacimiento:");

        fechanac_animal.setColorBackground(new java.awt.Color(114, 76, 33));
        fechanac_animal.setColorButtonHover(new java.awt.Color(114, 76, 33));
        fechanac_animal.setColorDiaActual(new java.awt.Color(114, 76, 33));
        fechanac_animal.setColorForeground(new java.awt.Color(114, 76, 33));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Der");

        tatuaje_der.setBackground(new java.awt.Color(114, 76, 33));
        tatuaje_der.setText("Derecho");
        tatuaje_der.setToolTipText("Derecho");
        tatuaje_der.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tatuaje_derActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Izq");

        tatuaje_izq.setBackground(new java.awt.Color(114, 76, 33));
        tatuaje_izq.setText("Izquierdo");
        tatuaje_izq.setToolTipText("Izquierdo");
        tatuaje_izq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tatuaje_izqActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Sexo de la Cr√≠a:");

        sexo_animal.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        sexo_animal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Macho", "Hembra" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(no_registro))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(27, 27, 27)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(no_siniga_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nombre_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(id_cria, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel9))
                            .addGap(55, 55, 55)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(potrero_idpotrero, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(vaca_idvaca, javax.swing.GroupLayout.Alignment.LEADING, 0, 141, Short.MAX_VALUE)
                                    .addComponent(toro_idtoro, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(raza_id_raza, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingreso_granja, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechanac_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel11))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(motivo_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ingreso_sist, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(color_animal)
                                        .addComponent(sexo_animal, 0, 162, Short.MAX_VALUE))
                                    .addComponent(tipo_concepcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tatuaje_der, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tatuaje_izq, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id_cria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel12))
                    .addComponent(fechanac_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombre_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(no_siniga_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(no_registro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(toro_idtoro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(vaca_idvaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(raza_id_raza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(potrero_idpotrero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingreso_granja, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(ingreso_sist, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel14))
                            .addComponent(motivo_ingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(tipo_concepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(tatuaje_der)
                            .addComponent(jLabel19)
                            .addComponent(tatuaje_izq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(color_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(sexo_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 720, 350));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(114, 76, 33));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Formulario de Cr√≠as");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 370, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/btnagregar.jpg"))); // NOI18N
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/btnbuscar.jpg"))); // NOI18N
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/btnlimpiar.jpg"))); // NOI18N
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img1/btnmodificar.jpg"))); // NOI18N
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 620, 60));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/criaicon.png"))); // NOI18N
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 0, 90, 80));
    }// </editor-fold>//GEN-END:initComponents

    private void id_criaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_criaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_criaActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed

        if (id_cria.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL ID DE CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (nombre_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NOMBRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_siniga_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO SINIGAN");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_registro.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO DE REGISTRO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (toro_idtoro.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL PADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (vaca_idvaca.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA MADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18));
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (raza_id_raza.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA A RAZA DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (potrero_idpotrero.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL POTRERO DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (motivo_ingreso.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL MOTIVO INGRESO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (tipo_concepcion.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA DESCRIPCI√ìN DEL POTRERO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (color_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL COLOR DEL ANIMAL");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);

        } else {
            try {
                Controlador.Conexion con = new Controlador.Conexion();
                con.ConexionPostgres();
                //JOptionPane.showMessageDialog(null, "El Area est√° repetida");
                Boolean der = tatuaje_der.isSelected();
                Boolean izq = tatuaje_izq.isSelected();
                con.actualizar("insert into nacido (id_cria,toro_idtoro"
                        + ",vaca_idvaca,potrero_idpotrero,no_siniga_animal"
                        + ",raza_idraza,nombre_animal,tatuaje_der,tatuaje_izq,no_registro"
                        + ",fechanac_animal,motivo_ingreso,ingreso_granja,ingreso_sist"
                        + ",color_animal,sexo_animal,tipo_concepcion"
                        + ") values('" + id_cria.getText()
                        + "," + toro_idtoro.getSelectedItem().toString()
                        + ",'" + vaca_idvaca.getSelectedItem().toString()
                        + "," + obteneriddelpotrero(potrero_idpotrero)
                        + ",'" + no_siniga_animal.getText()
                        + "," + obteneriddelaraza(raza_id_raza)
                        + ",'" + nombre_animal.getText()
                        + "," + der
                        + ",'" + izq
                        + "," + no_registro.getText()
                        + ",'" + fechanac_animal.getDatoFecha()
                        + "," + motivo_ingreso.getSelectedItem().toString()
                        + ",'" + ingreso_granja.getDatoFecha()
                        + "," + ingreso_sist.getDatoFecha()
                        + ",'" + color_animal.getText()
                        + ",'" + sexo_animal.getSelectedItem().toString()
                        + "', '" + tipo_concepcion.getSelectedItem().toString() + "')");

                SuccessAlert sa = new SuccessAlert(new principal.Principal123(), true);
                sa.titulo.setText("RAZA REGISTRADA!");
                sa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                sa.titulo.setForeground(new java.awt.Color(153, 153, 153));
                sa.setVisible(true);

                id_cria.setText("");
                toro_idtoro.setSelectedIndex(0);
                vaca_idvaca.setSelectedIndex(0);
                potrero_idpotrero.setSelectedIndex(0);
                no_siniga_animal.setText("");
                raza_id_raza.setSelectedIndex(0);
                nombre_animal.setText("");
                tatuaje_der.setSelected(false);
                tatuaje_izq.setSelected(false);
                no_registro.setText("");
                fechanac_animal.setDatoFecha(null);
                motivo_ingreso.setSelectedIndex(0);
                ingreso_granja.setDatoFecha(null);
                ingreso_sist.setDatoFecha(null);
                color_animal.setText("");
                tipo_concepcion.setSelectedIndex(0);

                con.cerrar();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(pnlpotrero.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(pnlpotrero.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(pnlpotrero.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(pnlpotrero.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_agregarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        if (id_cria.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL ID DE CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (nombre_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NOMBRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_siniga_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO SINIGAN");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_registro.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO DE REGISTRO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (toro_idtoro.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL PADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (vaca_idvaca.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA MADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (raza_id_raza.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA A RAZA DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (potrero_idpotrero.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL POTRERO DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (motivo_ingreso.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA DESCRIPCI√ì DEL POTRERO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (tipo_concepcion.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA DESCRIPCI√ìN DEL POTRERO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (color_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE LA DESCRIPCI√ìN DEL POTRERO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else {
            try {
                Conexion con = new Conexion();
                con.ConexionPostgres();

                String sql = ("Update nacido set toro_idtoro  = '"
                        + "', toro_idtoro = '" + toro_idtoro.getSelectedItem().toString()
                        + "', vaca_idvaca = '" + vaca_idvaca.getSelectedItem().toString()
                        + obteneriddelpotrero(potrero_idpotrero)
                        + "', no_siniga = " + no_siniga_animal.getText()
                        + "', raza_id_raza = '" + obteneriddelaraza(raza_id_raza)
                        + "', nombre_animal = '" + nombre_animal
                        + "', tatuaje_der = '" + tatuaje_der
                        + "', tatuaje_izq = '" + tatuaje_izq
                        + "', no_registro = '" + no_registro.getText()
                        + "', fecha_nac = '" + fechanac_animal.getDatoFecha()
                        + "', motivo_ing = '" + motivo_ingreso.getSelectedItem().toString()
                        + "', ingreso_granja = '" + ingreso_granja.getDatoFecha()
                        + "', ingreso_sist = '" + ingreso_sist.getDatoFecha()
                        + "', color = '" + color_animal.getText()
                        + "', sexo_animal = '" + sexo_animal.getSelectedIndex()
                        + "', tipo_concepcion = '" + tipo_concepcion.getSelectedItem().toString()
                        + "' where id_cria = '" + id_cria.getText() + "'");

                con.actualizar(sql);
                //                 JOptionPane.showMessageDialog(null, "INFORMACION MODIFICADA!");
                SuccessAlert sa = new SuccessAlert(new principal.Principal123(), true);
                sa.titulo.setText("CR√çA MODIFICADA!");
                sa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
                sa.titulo.setForeground(new java.awt.Color(153, 153, 153));
                sa.setVisible(true);

                id_cria.setText("");
                toro_idtoro.setSelectedIndex(0);
                vaca_idvaca.setSelectedIndex(0);
                potrero_idpotrero.setSelectedIndex(0);
                no_siniga_animal.setText("");
                raza_id_raza.setSelectedIndex(0);
                nombre_animal.setText("");
                tatuaje_der.setSelected(false);
                tatuaje_izq.setSelected(false);
                no_registro.setText("");
                fechanac_animal.setDatoFecha(null);
                motivo_ingreso.setSelectedIndex(0);
                ingreso_granja.setDatoFecha(null);
                ingreso_sist.setDatoFecha(null);
                color_animal.setText("");
                tipo_concepcion.setSelectedIndex(0);

                modificar.setEnabled(false);

                con.cerrar();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(pnlnacido.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(pnlnacido.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(pnlnacido.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(pnlnacido.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

        ErrorAlertnacido obj = new ErrorAlertnacido(new principal.Principal123(), true);
        obj.titulo.setText("ESCOJE LA VACA: ");
        obj.titulo.setFont(new java.awt.Font("Century Gothic", 1, 22)); // NOI18N
        obj.titulo.setForeground(new java.awt.Color(153, 153, 153));
        obj.setVisible(true);

        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            ResultSet rs = con.consultar("Select * from nacido where nombre_animal = '" + obj.Nacidos.getSelectedItem() + "' ");
            if (rs.next()) {

                id_cria.setText(rs.getString("idvaca"));
                toro_idtoro.setSelectedItem(rs.getString(2));
                vaca_idvaca.setSelectedItem(rs.getString(3));
                potrero_idpotrero.setSelectedItem(obtenernombredelpotrero(rs.getString("potrero_idpotrero")));
                no_siniga_animal.setText(rs.getString("no_siniga_animal"));
                raza_id_raza.setSelectedItem(obtenernombredelaraza(rs.getString("raza_id_raza")));
                nombre_animal.setText(rs.getString("nombre_animal"));
                tatuaje_der.setSelected(rs.getBoolean("tatuaje_der"));
                tatuaje_izq.setSelected(rs.getBoolean("tatuaje_izq"));
                no_registro.setText(rs.getString("no_registro"));
                fechanac_animal.setDatoFecha(rs.getDate("fechanac_animal"));
                motivo_ingreso.setSelectedItem(rs.getString(12));
                ingreso_granja.setDatoFecha(rs.getDate("ingreso_granja"));
                ingreso_sist.setDatoFecha(rs.getDate("ingreso_sist"));
                color_animal.setText(rs.getString("color_animal"));
                sexo_animal.setSelectedItem(rs.getString(16));
                tipo_concepcion.setSelectedItem(rs.getString(17));

                modificar.setEnabled(true);
                agregar.setEnabled(false);
//                id.setEnabled(false);

            } else {
//                JOptionPane.showMessageDialog(null, "El Area no existe");
                WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
                wa.titulo.setText("¬°¬°RAZA NO REGISTRADA!!");
                wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
                wa.setVisible(true);

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(pnlpotrero.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(pnlpotrero.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(pnlpotrero.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(pnlpotrero.class
                    .getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_buscarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        id_cria.setText("");
        toro_idtoro.setSelectedIndex(0);
        vaca_idvaca.setSelectedIndex(0);
        potrero_idpotrero.setSelectedIndex(0);
        no_siniga_animal.setText("");
        raza_id_raza.setSelectedIndex(0);
        nombre_animal.setText("");
        tatuaje_der.setSelected(false);
        tatuaje_izq.setSelected(false);
        no_registro.setText("");
        fechanac_animal.setDatoFecha(null);
        motivo_ingreso.setSelectedIndex(0);
        ingreso_granja.setDatoFecha(null);
        ingreso_sist.setDatoFecha(null);
        color_animal.setText("");
        tipo_concepcion.setSelectedIndex(0);
        sexo_animal.setSelectedIndex(0);
    }//GEN-LAST:event_limpiarActionPerformed

    private void nombre_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombre_animalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombre_animalActionPerformed

    private void no_siniga_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_siniga_animalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no_siniga_animalActionPerformed

    private void no_registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no_registroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no_registroActionPerformed

    private void color_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_color_animalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_color_animalActionPerformed

    private void tatuaje_derActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tatuaje_derActionPerformed
        //        tatuaje_der.setSelected(true);
        //        tatuaje_izq.setSelected(false);

        if (tatuaje_der.isSelected() == true) {
            String opcionsexo = "Derecho";
            tatuaje_izq.setSelected(false);

        } else {
            tatuaje_izq.setSelected(true);
            String opcionsexo = "Izquierdo";
            tatuaje_der.setSelected(false);
        }
    }//GEN-LAST:event_tatuaje_derActionPerformed

    private void tatuaje_izqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tatuaje_izqActionPerformed

        if (tatuaje_izq.isSelected() == true) {
            String opcionsexo = "Izquierdo";
            tatuaje_der.setSelected(false);
        } else {
            tatuaje_der.setSelected(true);
            String opcionsexo = "Derecho";
            tatuaje_izq.setSelected(false);
        }
    }//GEN-LAST:event_tatuaje_izqActionPerformed
    public void validarcampos() {
        if (id_cria.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL ID DE CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (nombre_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NOMBRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_siniga_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO SINIGAN");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (no_registro.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL NUMERO DE REGISTRO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (toro_idtoro.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL PADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (vaca_idvaca.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA MADRE DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (raza_id_raza.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA A RAZA DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (potrero_idpotrero.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL POTRERO DE LA CR√çA");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (motivo_ingreso.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA EL MOTIVO INGRESO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (tipo_concepcion.getSelectedIndex() == 0) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, ESCOJA LA DESCRIPCI√ìN DEL POTRERO");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);
        } else if (color_animal.getText().isEmpty()) {
            //JOptionPane.showMessageDialog(null, "Complete el espacio vacio!!");
            WarningAlertCerrar wa = new WarningAlertCerrar(new principal.Principal123(), true);
            wa.titulo.setText("POR FAVOR, DIGITE EL COLOR DEL ANIMAL");
            wa.titulo.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
            wa.titulo.setForeground(new java.awt.Color(153, 153, 153));
            wa.setVisible(true);

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    public static javax.swing.JTextField color_animal;
    private rojeru_san.componentes.RSDateChooser fechanac_animal;
    public static javax.swing.JTextField id_cria;
    private rojeru_san.componentes.RSDateChooser ingreso_granja;
    private rojeru_san.componentes.RSDateChooser ingreso_sist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton modificar;
    public static javax.swing.JComboBox motivo_ingreso;
    public static javax.swing.JTextField no_registro;
    public static javax.swing.JTextField no_siniga_animal;
    public static javax.swing.JTextField nombre_animal;
    public static javax.swing.JComboBox potrero_idpotrero;
    public static javax.swing.JComboBox raza_id_raza;
    public static javax.swing.JComboBox sexo_animal;
    public static javax.swing.JRadioButton tatuaje_der;
    public static javax.swing.JRadioButton tatuaje_izq;
    public static javax.swing.JComboBox tipo_concepcion;
    public static javax.swing.JComboBox toro_idtoro;
    public static javax.swing.JComboBox vaca_idvaca;
    // End of variables declaration//GEN-END:variables
}
